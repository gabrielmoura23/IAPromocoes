@model IAPromocoes.UI.MVC.Adm.ViewModels.AlterarViewModel
@{
    ViewBag.Title = "Alterar";
    Layout = "~/Views/Shared/__LayoutInterno.cshtml";
}

@section PageLevelStyles {
    <link rel="stylesheet" type="text/css" href="~/assets/global/plugins/select2/select2.css" />

}

<!-- BEGIN PAGE CONTAINER -->
<div class="page-container">
    <!-- BEGIN PAGE CONTENT -->
    <div class="page-content">
        <div class="container-fluid">
            <!-- BEGIN SAMPLE PORTLET CONFIGURATION MODAL FORM-->
            <div class="modal fade" id="portlet-config" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                            <h4 class="modal-title">Modal title</h4>
                        </div>
                        <div class="modal-body">
                            Widget settings form goes here
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn blue">Save changes</button>
                            <button type="button" class="btn default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
            <!-- END SAMPLE PORTLET CONFIGURATION MODAL FORM-->
            <!-- BEGIN PAGE BREADCRUMB -->
            <ul class="page-breadcrumb breadcrumb">
                <li>
                    <a href="#">Home</a><i class="fa fa-circle"></i>
                </li>
                <li>
                    <a href="/Account/Lista">Usuários</a>
                    <i class="fa fa-circle"></i>
                </li>
                <li class="active">
                    Alterar
                </li>
            </ul>
            <!-- END PAGE BREADCRUMB -->
            <!-- BEGIN PAGE CONTENT INNER -->

            <div class="row">
                <div class="col-md-12">
                    <div class="tabbable tabbable-custom tabbable-noborder tabbable-reversed">
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab_1">
                                <div class="portlet box blue">
                                    <div class="portlet-title">
                                        <div class="caption">
                                            <i class="fa fa-gift"></i>Formulário Usuário
                                        </div>
                                    </div>
                                    <div class="portlet-body form">
                                        <!-- BEGIN FORM-->
                                        @using (Html.BeginForm("Alterar", "Account", FormMethod.Post, new { @class = "horizontal-form" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            @Html.HiddenFor(model => model.DtAlteracao, new { @Value = System.DateTime.Now.ToString("dd/MM/yyyy") })

                                            <div class="form-body">
                                                <h3 class="form-section">Geral</h3>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            <label class="control-label">Nome</label>
                                                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                                                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            <label class="control-label">SobreNome</label>
                                                            @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", @placeholder = "SobreNome" } })
                                                            @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label class="control-label">CPF</label>
                                                            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @id = "txtCPF", @readonly = "readonly", @class = "form-control", @placeholder = "CPF" } })
                                                            @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-10">
                                                        <div class="form-group">
                                                            <label class="control-label">E-Mail</label>
                                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @placeholder = "E-Mail" } })
                                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label class="control-label">DDD Telefone</label>
                                                            @Html.EditorFor(model => model.DddTelefone, new { htmlAttributes = new { @id = "txtDddTelefone", @class = "form-control", @placeholder = "DDD Telefone" } })
                                                            @Html.ValidationMessageFor(model => model.DddTelefone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="control-label">Telefone</label>
                                                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @id = "txtTelefone", @class = "form-control", @placeholder = "Telefone" } })
                                                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label class="control-label">DDD Celular</label>
                                                            @Html.EditorFor(model => model.DddCelular, new { htmlAttributes = new { @id = "txtDddCelular", @class = "form-control", @placeholder = "DDD Celular" } })
                                                            @Html.ValidationMessageFor(model => model.DddCelular, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="control-label">Celular</label>
                                                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @id = "txtCelular", @class = "form-control", @placeholder = "Celular" } })
                                                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <div class="form-group">
                                                            <label class="control-label">Ativo?</label>
                                                            <div class="radio-list">
                                                                <label class="radio-inline">
                                                                    @Html.RadioButtonFor(model => model.FlgAtivo, true) Sim
                                                                </label>
                                                                <label class="radio-inline">
                                                                    @Html.RadioButtonFor(model => model.FlgAtivo, false) Não
                                                                </label>
                                                                @Html.ValidationMessageFor(model => model.FlgAtivo, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-10">&nbsp;</div>
                                                </div>
                                            </div>
                                            <div class="form-actions right">
                                                <a href="/Account/Lista" class="btn default">
                                                    Cancelar
                                                </a>
                                                @Html.ActionLink("Alterar Senha", "_AltSenha", "Account", null, new { Id = @Model.Id, @class = "btn purple edit-person" })
                                                <button type="submit" class="btn blue"><i class="fa fa-check"></i> Salvar</button>
                                            </div>
                                        }
                                        <!-- END FORM-->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- END PAGE CONTENT INNER -->
        </div>
    </div>
    <!-- END PAGE CONTENT -->
</div>
<!-- END PAGE CONTAINER -->

<div class="modal fade" id="edit-person" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div id="edit-person-container" class="modal-dialog"></div>
</div>

@section PageLevelPlugins {
    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <!-- END PAGE LEVEL PLUGINS -->
    <!-- BEGIN PAGE LEVEL JAVASCRIPTS (REQUIRED ONLY FOR CURRENT PAGE) -->
    <script type="text/javascript" src="~/assets/global/plugins/select2/select2.min.js"></script>
    <!-- END PAGE LEVEL SCRIPTS -->
}

@section PageLevelScripts {
    <script src="~/assets/global/scripts/metronic.js" type="text/javascript"></script>
    <script src="~/assets/admin/layout3/scripts/layout.js" type="text/javascript"></script>
    <script src="~/assets/admin/layout3/scripts/demo.js" type="text/javascript"></script>
    <script src="~/assets/admin/pages/scripts/form-samples.js"></script>
    <script src="~/Scripts/jquery.inputmask/jquery.inputmask.js"></script>

    <script type="text/javascript">
        jQuery(document).ready(function () {
            FormSamples.init();
            mascaras();
        });


        function mascaras() {
            $(document).ready(function () {
                //$(":input").inputmask();
                $('#txtCPF').inputmask("9{0,11}");  //static mask
                $('#txtDddTelefone').inputmask("9{0,2}");  //static mask
                $('#txtTelefone').inputmask("9{0,10}");  //static mask
                $('#txtDddCelular').inputmask("9{0,2}");  //static mask
                $('#txtCelular').inputmask("9{0,10}");  //static mask
                //$(selector).inputmask({ "mask": "99-9999999" }); //specifying options only
                //$(selector).inputmask("9-a{1,3}9{1,3}"); //mask with dynamic syntax
            });
        }

        function bindForm(dialog) {           
            $('form', dialog).submit(function () {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        //alert('aqui');
                        //alert(result);
                        //alert(result.success);
                        //$('#edit-person').modal('hide');
                        //if (result.success) {
                        //    $('#edit-person').modal('hide');
                        //    // Refresh:
                        //    // location.reload();
                        //} else {
                        //    $('#edit-person-container').html(result);
                        //    bindForm();
                        //}
                        if (result.success) {
                            //close popup
                            $('#edit-person').modal('hide');
                            //$("[data-dismiss=modal]").trigger({ type: "click" });
                            //Atualizar lista
                        }
                        else {
                            //alert('aqui');
                            //$('#edit-person').modal('hide');
                            $('#edit-person-container').html(result);
                            var div = document.getElementById('edit-person-container');
                            bindForm(div);
                            //alert('Erro!');
                        }
                    }
                });
                return false;
            });
        }

        $('.edit-person').click(function () {

            //var url = "/Bootstrap/EditPerson"; // the url to the controller
            //var id = $(this).attr('id');
            var Id = $(this).attr('Id');
            $('#edit-person-container').load(this.href + '?Id=' + Id, function () {
                $('#edit-person').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');
                bindForm(this);
            });
            return false;
        });
    </script>
}

